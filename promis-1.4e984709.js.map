{"version":3,"sources":["js/promis-1.js"],"names":["delay","ms","Promise","resolve","logger","time","console","log","then"],"mappings":";AAAA,MAAMA,EAAQC,GAEL,IAAIC,QAAQC,GAAWA,EAAQF,IAGhCG,EAASC,GAAQC,QAAQC,sBAAsBF,OAIvDL,EAAM,KAAMQ,KAAKJ,GACjBJ,EAAM,KAAMQ,KAAKJ,GACjBJ,EAAM,MAAMQ,KAAKJ","file":"promis-1.4e984709.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n  // Твой код\n  return new Promise(resolve => resolve(ms));\n};\n\n  const logger = time => console.log(`Resolved after ${time}ms`);\n\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n\n\n\n// const promise = new Promise((resolve, reject) => {\n//     const canFulfill = Math.random() > 0.5;\n\n//     setTimeout(() => {\n//      if (canFulfill) {\n//         resolve('Выполнится успешно (исполнен, fulfilled)');\n//     }\n\n//     reject('Выполнится с ошибкой (отклонен, rejected)');\n//     }, 1000); \n// });\n\n// function onFulfilled(result) {\n//     console.log('onFulfilled -> onFulfilled');\n//     console.log(`YES ${result}`);\n// }\n\n// function onRejected(error) {\n//     console.log('onRejected -> onRejected');\n//     console.log(`NO ${error}`);\n// }\n\n\n// promise\n//     .then(onFulfilled)\n//     .then(\n//         x => {\n//             console.log(x);\n//             return 10;\n//         })\n//     .then(y => {\n//         console.log(y);\n//     })\n//     .catch(error => console.log(error))\n//     .finally(() => console.log('Я буду выполнен в любом случае'));"]}